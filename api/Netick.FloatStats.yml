### YamlMime:ManagedReference
items:
- uid: Netick.FloatStats
  commentId: T:Netick.FloatStats
  id: FloatStats
  parent: Netick
  children:
  - Netick.FloatStats.#ctor(System.Int32,System.Single,System.Boolean)
  - Netick.FloatStats.Average
  - Netick.FloatStats.Data
  - Netick.FloatStats.GetData
  - Netick.FloatStats.IsHealthy
  - Netick.FloatStats.Latest
  - Netick.FloatStats.Max
  - Netick.FloatStats.Min
  - Netick.FloatStats.Reset
  - Netick.FloatStats.StdDeviation
  - Netick.FloatStats.StdDeviation2
  - Netick.FloatStats.Update(System.Single)
  - Netick.FloatStats.WarningThreshold
  langs:
  - csharp
  - vb
  name: FloatStats
  nameWithType: FloatStats
  fullName: Netick.FloatStats
  type: Class
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public class FloatStats
    content.vb: Public Class FloatStats
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Netick.FloatStats.GetData
  commentId: M:Netick.FloatStats.GetData
  id: GetData
  parent: Netick.FloatStats
  langs:
  - csharp
  - vb
  name: GetData()
  nameWithType: FloatStats.GetData()
  fullName: Netick.FloatStats.GetData()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public CircularList<float> GetData()
    return:
      type: Netick.CircularList{System.Single}
    content.vb: Public Function GetData() As CircularList(Of Single)
  overload: Netick.FloatStats.GetData*
- uid: Netick.FloatStats.IsHealthy
  commentId: M:Netick.FloatStats.IsHealthy
  id: IsHealthy
  parent: Netick.FloatStats
  langs:
  - csharp
  - vb
  name: IsHealthy()
  nameWithType: FloatStats.IsHealthy()
  fullName: Netick.FloatStats.IsHealthy()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public bool IsHealthy()
    return:
      type: System.Boolean
    content.vb: Public Function IsHealthy() As Boolean
  overload: Netick.FloatStats.IsHealthy*
- uid: Netick.FloatStats.#ctor(System.Int32,System.Single,System.Boolean)
  commentId: M:Netick.FloatStats.#ctor(System.Int32,System.Single,System.Boolean)
  id: '#ctor(System.Int32,System.Single,System.Boolean)'
  parent: Netick.FloatStats
  langs:
  - csharp
  - vb
  name: FloatStats(int, float, bool)
  nameWithType: FloatStats.FloatStats(int, float, bool)
  fullName: Netick.FloatStats.FloatStats(int, float, bool)
  type: Constructor
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public FloatStats(int windowSize = 128, float warningThreshold = 3.4028235E+38, bool lowIsBetter = true)
    parameters:
    - id: windowSize
      type: System.Int32
    - id: warningThreshold
      type: System.Single
    - id: lowIsBetter
      type: System.Boolean
    content.vb: Public Sub New(windowSize As Integer = 128, warningThreshold As Single = 3.4028235E+38, lowIsBetter As Boolean = True)
  overload: Netick.FloatStats.#ctor*
  nameWithType.vb: FloatStats.New(Integer, Single, Boolean)
  fullName.vb: Netick.FloatStats.New(Integer, Single, Boolean)
  name.vb: New(Integer, Single, Boolean)
- uid: Netick.FloatStats.Update(System.Single)
  commentId: M:Netick.FloatStats.Update(System.Single)
  id: Update(System.Single)
  parent: Netick.FloatStats
  langs:
  - csharp
  - vb
  name: Update(float)
  nameWithType: FloatStats.Update(float)
  fullName: Netick.FloatStats.Update(float)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void Update(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Public Sub Update(value As Single)
  overload: Netick.FloatStats.Update*
  nameWithType.vb: FloatStats.Update(Single)
  fullName.vb: Netick.FloatStats.Update(Single)
  name.vb: Update(Single)
- uid: Netick.FloatStats.Reset
  commentId: M:Netick.FloatStats.Reset
  id: Reset
  parent: Netick.FloatStats
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: FloatStats.Reset()
  fullName: Netick.FloatStats.Reset()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: Netick.FloatStats.Reset*
- uid: Netick.FloatStats.Latest
  commentId: P:Netick.FloatStats.Latest
  id: Latest
  parent: Netick.FloatStats
  langs:
  - csharp
  - vb
  name: Latest
  nameWithType: FloatStats.Latest
  fullName: Netick.FloatStats.Latest
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public float Latest { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Latest As Single
  overload: Netick.FloatStats.Latest*
- uid: Netick.FloatStats.Max
  commentId: P:Netick.FloatStats.Max
  id: Max
  parent: Netick.FloatStats
  langs:
  - csharp
  - vb
  name: Max
  nameWithType: FloatStats.Max
  fullName: Netick.FloatStats.Max
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public float Max { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Max As Single
  overload: Netick.FloatStats.Max*
- uid: Netick.FloatStats.Min
  commentId: P:Netick.FloatStats.Min
  id: Min
  parent: Netick.FloatStats
  langs:
  - csharp
  - vb
  name: Min
  nameWithType: FloatStats.Min
  fullName: Netick.FloatStats.Min
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public float Min { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Min As Single
  overload: Netick.FloatStats.Min*
- uid: Netick.FloatStats.Average
  commentId: P:Netick.FloatStats.Average
  id: Average
  parent: Netick.FloatStats
  langs:
  - csharp
  - vb
  name: Average
  nameWithType: FloatStats.Average
  fullName: Netick.FloatStats.Average
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public float Average { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Average As Single
  overload: Netick.FloatStats.Average*
- uid: Netick.FloatStats.StdDeviation
  commentId: P:Netick.FloatStats.StdDeviation
  id: StdDeviation
  parent: Netick.FloatStats
  langs:
  - csharp
  - vb
  name: StdDeviation
  nameWithType: FloatStats.StdDeviation
  fullName: Netick.FloatStats.StdDeviation
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public float StdDeviation { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property StdDeviation As Single
  overload: Netick.FloatStats.StdDeviation*
- uid: Netick.FloatStats.StdDeviation2
  commentId: P:Netick.FloatStats.StdDeviation2
  id: StdDeviation2
  parent: Netick.FloatStats
  langs:
  - csharp
  - vb
  name: StdDeviation2
  nameWithType: FloatStats.StdDeviation2
  fullName: Netick.FloatStats.StdDeviation2
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public float StdDeviation2 { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property StdDeviation2 As Single
  overload: Netick.FloatStats.StdDeviation2*
- uid: Netick.FloatStats.WarningThreshold
  commentId: P:Netick.FloatStats.WarningThreshold
  id: WarningThreshold
  parent: Netick.FloatStats
  langs:
  - csharp
  - vb
  name: WarningThreshold
  nameWithType: FloatStats.WarningThreshold
  fullName: Netick.FloatStats.WarningThreshold
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public float WarningThreshold { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property WarningThreshold As Single
  overload: Netick.FloatStats.WarningThreshold*
- uid: Netick.FloatStats.Data
  commentId: P:Netick.FloatStats.Data
  id: Data
  parent: Netick.FloatStats
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: FloatStats.Data
  fullName: Netick.FloatStats.Data
  type: Property
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public CircularList<float> Data { get; }
    parameters: []
    return:
      type: Netick.CircularList{System.Single}
    content.vb: Public ReadOnly Property Data As CircularList(Of Single)
  overload: Netick.FloatStats.Data*
references:
- uid: Netick
  commentId: N:Netick
  isExternal: true
  href: Netick.html
  name: Netick
  nameWithType: Netick
  fullName: Netick
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Netick.FloatStats.GetData*
  commentId: Overload:Netick.FloatStats.GetData
  isExternal: true
  href: Netick.FloatStats.html#Netick_FloatStats_GetData
  name: GetData
  nameWithType: FloatStats.GetData
  fullName: Netick.FloatStats.GetData
- uid: Netick.CircularList{System.Single}
  commentId: T:Netick.CircularList{System.Single}
  parent: Netick
  definition: Netick.CircularList`1
  href: Netick.CircularList-1.html
  name: CircularList<float>
  nameWithType: CircularList<float>
  fullName: Netick.CircularList<float>
  nameWithType.vb: CircularList(Of Single)
  fullName.vb: Netick.CircularList(Of Single)
  name.vb: CircularList(Of Single)
  spec.csharp:
  - uid: Netick.CircularList`1
    name: CircularList
    isExternal: true
    href: Netick.CircularList-1.html
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: Netick.CircularList`1
    name: CircularList
    isExternal: true
    href: Netick.CircularList-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Netick.CircularList`1
  commentId: T:Netick.CircularList`1
  isExternal: true
  href: Netick.CircularList-1.html
  name: CircularList<T>
  nameWithType: CircularList<T>
  fullName: Netick.CircularList<T>
  nameWithType.vb: CircularList(Of T)
  fullName.vb: Netick.CircularList(Of T)
  name.vb: CircularList(Of T)
  spec.csharp:
  - uid: Netick.CircularList`1
    name: CircularList
    isExternal: true
    href: Netick.CircularList-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Netick.CircularList`1
    name: CircularList
    isExternal: true
    href: Netick.CircularList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Netick.FloatStats.IsHealthy*
  commentId: Overload:Netick.FloatStats.IsHealthy
  isExternal: true
  href: Netick.FloatStats.html#Netick_FloatStats_IsHealthy
  name: IsHealthy
  nameWithType: FloatStats.IsHealthy
  fullName: Netick.FloatStats.IsHealthy
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Netick.FloatStats.#ctor*
  commentId: Overload:Netick.FloatStats.#ctor
  isExternal: true
  href: Netick.FloatStats.html#Netick_FloatStats__ctor_System_Int32_System_Single_System_Boolean_
  name: FloatStats
  nameWithType: FloatStats.FloatStats
  fullName: Netick.FloatStats.FloatStats
  nameWithType.vb: FloatStats.New
  fullName.vb: Netick.FloatStats.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Netick.FloatStats.Update*
  commentId: Overload:Netick.FloatStats.Update
  isExternal: true
  href: Netick.FloatStats.html#Netick_FloatStats_Update_System_Single_
  name: Update
  nameWithType: FloatStats.Update
  fullName: Netick.FloatStats.Update
- uid: Netick.FloatStats.Reset*
  commentId: Overload:Netick.FloatStats.Reset
  isExternal: true
  href: Netick.FloatStats.html#Netick_FloatStats_Reset
  name: Reset
  nameWithType: FloatStats.Reset
  fullName: Netick.FloatStats.Reset
- uid: Netick.FloatStats.Latest*
  commentId: Overload:Netick.FloatStats.Latest
  isExternal: true
  href: Netick.FloatStats.html#Netick_FloatStats_Latest
  name: Latest
  nameWithType: FloatStats.Latest
  fullName: Netick.FloatStats.Latest
- uid: Netick.FloatStats.Max*
  commentId: Overload:Netick.FloatStats.Max
  isExternal: true
  href: Netick.FloatStats.html#Netick_FloatStats_Max
  name: Max
  nameWithType: FloatStats.Max
  fullName: Netick.FloatStats.Max
- uid: Netick.FloatStats.Min*
  commentId: Overload:Netick.FloatStats.Min
  isExternal: true
  href: Netick.FloatStats.html#Netick_FloatStats_Min
  name: Min
  nameWithType: FloatStats.Min
  fullName: Netick.FloatStats.Min
- uid: Netick.FloatStats.Average*
  commentId: Overload:Netick.FloatStats.Average
  isExternal: true
  href: Netick.FloatStats.html#Netick_FloatStats_Average
  name: Average
  nameWithType: FloatStats.Average
  fullName: Netick.FloatStats.Average
- uid: Netick.FloatStats.StdDeviation*
  commentId: Overload:Netick.FloatStats.StdDeviation
  isExternal: true
  href: Netick.FloatStats.html#Netick_FloatStats_StdDeviation
  name: StdDeviation
  nameWithType: FloatStats.StdDeviation
  fullName: Netick.FloatStats.StdDeviation
- uid: Netick.FloatStats.StdDeviation2*
  commentId: Overload:Netick.FloatStats.StdDeviation2
  isExternal: true
  href: Netick.FloatStats.html#Netick_FloatStats_StdDeviation2
  name: StdDeviation2
  nameWithType: FloatStats.StdDeviation2
  fullName: Netick.FloatStats.StdDeviation2
- uid: Netick.FloatStats.WarningThreshold*
  commentId: Overload:Netick.FloatStats.WarningThreshold
  isExternal: true
  href: Netick.FloatStats.html#Netick_FloatStats_WarningThreshold
  name: WarningThreshold
  nameWithType: FloatStats.WarningThreshold
  fullName: Netick.FloatStats.WarningThreshold
- uid: Netick.FloatStats.Data*
  commentId: Overload:Netick.FloatStats.Data
  isExternal: true
  href: Netick.FloatStats.html#Netick_FloatStats_Data
  name: Data
  nameWithType: FloatStats.Data
  fullName: Netick.FloatStats.Data
