### YamlMime:ManagedReference
items:
- uid: Netick.INetickSocket
  commentId: T:Netick.INetickSocket
  id: INetickSocket
  parent: Netick
  children:
  - Netick.INetickSocket.Connect(Netick.IEndPoint@)
  - Netick.INetickSocket.CreateFromIpPort(System.String,System.Int32)
  - Netick.INetickSocket.Deinitialize
  - Netick.INetickSocket.Initialize
  - Netick.INetickSocket.Poll
  - Netick.INetickSocket.Receive(Netick.IEndPoint@,System.Byte*,System.Int32)
  - Netick.INetickSocket.Send(Netick.IEndPoint,System.Byte*,System.Int32)
  - Netick.INetickSocket.Shutdown
  - Netick.INetickSocket.StartClient(System.Int64,System.Int64)
  - Netick.INetickSocket.StartServer(System.Int32,System.Int64,System.Int64)
  langs:
  - csharp
  - vb
  name: INetickSocket
  nameWithType: INetickSocket
  fullName: Netick.INetickSocket
  type: Interface
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: public interface INetickSocket
    content.vb: Public Interface INetickSocket
- uid: Netick.INetickSocket.Initialize
  commentId: M:Netick.INetickSocket.Initialize
  id: Initialize
  parent: Netick.INetickSocket
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: INetickSocket.Initialize()
  fullName: Netick.INetickSocket.Initialize()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: bool Initialize()
    return:
      type: System.Boolean
    content.vb: Function Initialize() As Boolean
  overload: Netick.INetickSocket.Initialize*
- uid: Netick.INetickSocket.Deinitialize
  commentId: M:Netick.INetickSocket.Deinitialize
  id: Deinitialize
  parent: Netick.INetickSocket
  langs:
  - csharp
  - vb
  name: Deinitialize()
  nameWithType: INetickSocket.Deinitialize()
  fullName: Netick.INetickSocket.Deinitialize()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: void Deinitialize()
    content.vb: Sub Deinitialize()
  overload: Netick.INetickSocket.Deinitialize*
- uid: Netick.INetickSocket.StartClient(System.Int64,System.Int64)
  commentId: M:Netick.INetickSocket.StartClient(System.Int64,System.Int64)
  id: StartClient(System.Int64,System.Int64)
  parent: Netick.INetickSocket
  langs:
  - csharp
  - vb
  name: StartClient(long, long)
  nameWithType: INetickSocket.StartClient(long, long)
  fullName: Netick.INetickSocket.StartClient(long, long)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: void StartClient(long sendBufferSize, long receiveBufferSize)
    parameters:
    - id: sendBufferSize
      type: System.Int64
    - id: receiveBufferSize
      type: System.Int64
    content.vb: Sub StartClient(sendBufferSize As Long, receiveBufferSize As Long)
  overload: Netick.INetickSocket.StartClient*
  nameWithType.vb: INetickSocket.StartClient(Long, Long)
  fullName.vb: Netick.INetickSocket.StartClient(Long, Long)
  name.vb: StartClient(Long, Long)
- uid: Netick.INetickSocket.StartServer(System.Int32,System.Int64,System.Int64)
  commentId: M:Netick.INetickSocket.StartServer(System.Int32,System.Int64,System.Int64)
  id: StartServer(System.Int32,System.Int64,System.Int64)
  parent: Netick.INetickSocket
  langs:
  - csharp
  - vb
  name: StartServer(int, long, long)
  nameWithType: INetickSocket.StartServer(int, long, long)
  fullName: Netick.INetickSocket.StartServer(int, long, long)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: void StartServer(int port, long sendBufferSize, long receiveBufferSize)
    parameters:
    - id: port
      type: System.Int32
    - id: sendBufferSize
      type: System.Int64
    - id: receiveBufferSize
      type: System.Int64
    content.vb: Sub StartServer(port As Integer, sendBufferSize As Long, receiveBufferSize As Long)
  overload: Netick.INetickSocket.StartServer*
  nameWithType.vb: INetickSocket.StartServer(Integer, Long, Long)
  fullName.vb: Netick.INetickSocket.StartServer(Integer, Long, Long)
  name.vb: StartServer(Integer, Long, Long)
- uid: Netick.INetickSocket.Shutdown
  commentId: M:Netick.INetickSocket.Shutdown
  id: Shutdown
  parent: Netick.INetickSocket
  langs:
  - csharp
  - vb
  name: Shutdown()
  nameWithType: INetickSocket.Shutdown()
  fullName: Netick.INetickSocket.Shutdown()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: void Shutdown()
    content.vb: Sub Shutdown()
  overload: Netick.INetickSocket.Shutdown*
- uid: Netick.INetickSocket.Connect(Netick.IEndPoint@)
  commentId: M:Netick.INetickSocket.Connect(Netick.IEndPoint@)
  id: Connect(Netick.IEndPoint@)
  parent: Netick.INetickSocket
  langs:
  - csharp
  - vb
  name: Connect(ref IEndPoint)
  nameWithType: INetickSocket.Connect(ref IEndPoint)
  fullName: Netick.INetickSocket.Connect(ref Netick.IEndPoint)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: bool Connect(ref IEndPoint address)
    parameters:
    - id: address
      type: Netick.IEndPoint
    return:
      type: System.Boolean
    content.vb: Function Connect(address As IEndPoint) As Boolean
  overload: Netick.INetickSocket.Connect*
  nameWithType.vb: INetickSocket.Connect(IEndPoint)
  fullName.vb: Netick.INetickSocket.Connect(Netick.IEndPoint)
  name.vb: Connect(IEndPoint)
- uid: Netick.INetickSocket.CreateFromIpPort(System.String,System.Int32)
  commentId: M:Netick.INetickSocket.CreateFromIpPort(System.String,System.Int32)
  id: CreateFromIpPort(System.String,System.Int32)
  parent: Netick.INetickSocket
  langs:
  - csharp
  - vb
  name: CreateFromIpPort(string, int)
  nameWithType: INetickSocket.CreateFromIpPort(string, int)
  fullName: Netick.INetickSocket.CreateFromIpPort(string, int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: IEndPoint CreateFromIpPort(string ip, int port)
    parameters:
    - id: ip
      type: System.String
    - id: port
      type: System.Int32
    return:
      type: Netick.IEndPoint
    content.vb: Function CreateFromIpPort(ip As String, port As Integer) As IEndPoint
  overload: Netick.INetickSocket.CreateFromIpPort*
  nameWithType.vb: INetickSocket.CreateFromIpPort(String, Integer)
  fullName.vb: Netick.INetickSocket.CreateFromIpPort(String, Integer)
  name.vb: CreateFromIpPort(String, Integer)
- uid: Netick.INetickSocket.Poll
  commentId: M:Netick.INetickSocket.Poll
  id: Poll
  parent: Netick.INetickSocket
  langs:
  - csharp
  - vb
  name: Poll()
  nameWithType: INetickSocket.Poll()
  fullName: Netick.INetickSocket.Poll()
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: int Poll()
    return:
      type: System.Int32
    content.vb: Function Poll() As Integer
  overload: Netick.INetickSocket.Poll*
- uid: Netick.INetickSocket.Receive(Netick.IEndPoint@,System.Byte*,System.Int32)
  commentId: M:Netick.INetickSocket.Receive(Netick.IEndPoint@,System.Byte*,System.Int32)
  id: Receive(Netick.IEndPoint@,System.Byte*,System.Int32)
  parent: Netick.INetickSocket
  langs:
  - csharp
  - vb
  name: Receive(out IEndPoint, byte*, int)
  nameWithType: INetickSocket.Receive(out IEndPoint, byte*, int)
  fullName: Netick.INetickSocket.Receive(out Netick.IEndPoint, byte*, int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: int Receive(out IEndPoint address, byte* buffer, int bufferSize)
    parameters:
    - id: address
      type: Netick.IEndPoint
    - id: buffer
      type: System.Byte*
    - id: bufferSize
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function Receive(address As IEndPoint, buffer As Byte*, bufferSize As Integer) As Integer
  overload: Netick.INetickSocket.Receive*
  nameWithType.vb: INetickSocket.Receive(IEndPoint, Byte*, Integer)
  fullName.vb: Netick.INetickSocket.Receive(Netick.IEndPoint, Byte*, Integer)
  name.vb: Receive(IEndPoint, Byte*, Integer)
- uid: Netick.INetickSocket.Send(Netick.IEndPoint,System.Byte*,System.Int32)
  commentId: M:Netick.INetickSocket.Send(Netick.IEndPoint,System.Byte*,System.Int32)
  id: Send(Netick.IEndPoint,System.Byte*,System.Int32)
  parent: Netick.INetickSocket
  langs:
  - csharp
  - vb
  name: Send(IEndPoint, byte*, int)
  nameWithType: INetickSocket.Send(IEndPoint, byte*, int)
  fullName: Netick.INetickSocket.Send(Netick.IEndPoint, byte*, int)
  type: Method
  assemblies:
  - Netick
  namespace: Netick
  syntax:
    content: void Send(IEndPoint address, byte* data, int dataLength)
    parameters:
    - id: address
      type: Netick.IEndPoint
    - id: data
      type: System.Byte*
    - id: dataLength
      type: System.Int32
    content.vb: Sub Send(address As IEndPoint, data As Byte*, dataLength As Integer)
  overload: Netick.INetickSocket.Send*
  nameWithType.vb: INetickSocket.Send(IEndPoint, Byte*, Integer)
  fullName.vb: Netick.INetickSocket.Send(Netick.IEndPoint, Byte*, Integer)
  name.vb: Send(IEndPoint, Byte*, Integer)
references:
- uid: Netick
  commentId: N:Netick
  isExternal: true
  href: Netick.html
  name: Netick
  nameWithType: Netick
  fullName: Netick
- uid: Netick.INetickSocket.Initialize*
  commentId: Overload:Netick.INetickSocket.Initialize
  isExternal: true
  href: Netick.INetickSocket.html#Netick_INetickSocket_Initialize
  name: Initialize
  nameWithType: INetickSocket.Initialize
  fullName: Netick.INetickSocket.Initialize
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Netick.INetickSocket.Deinitialize*
  commentId: Overload:Netick.INetickSocket.Deinitialize
  isExternal: true
  href: Netick.INetickSocket.html#Netick_INetickSocket_Deinitialize
  name: Deinitialize
  nameWithType: INetickSocket.Deinitialize
  fullName: Netick.INetickSocket.Deinitialize
- uid: Netick.INetickSocket.StartClient*
  commentId: Overload:Netick.INetickSocket.StartClient
  isExternal: true
  href: Netick.INetickSocket.html#Netick_INetickSocket_StartClient_System_Int64_System_Int64_
  name: StartClient
  nameWithType: INetickSocket.StartClient
  fullName: Netick.INetickSocket.StartClient
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Netick.INetickSocket.StartServer*
  commentId: Overload:Netick.INetickSocket.StartServer
  isExternal: true
  href: Netick.INetickSocket.html#Netick_INetickSocket_StartServer_System_Int32_System_Int64_System_Int64_
  name: StartServer
  nameWithType: INetickSocket.StartServer
  fullName: Netick.INetickSocket.StartServer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Netick.INetickSocket.Shutdown*
  commentId: Overload:Netick.INetickSocket.Shutdown
  isExternal: true
  href: Netick.INetickSocket.html#Netick_INetickSocket_Shutdown
  name: Shutdown
  nameWithType: INetickSocket.Shutdown
  fullName: Netick.INetickSocket.Shutdown
- uid: Netick.INetickSocket.Connect*
  commentId: Overload:Netick.INetickSocket.Connect
  isExternal: true
  href: Netick.INetickSocket.html#Netick_INetickSocket_Connect_Netick_IEndPoint__
  name: Connect
  nameWithType: INetickSocket.Connect
  fullName: Netick.INetickSocket.Connect
- uid: Netick.IEndPoint
  commentId: T:Netick.IEndPoint
  parent: Netick
  isExternal: true
  href: Netick.IEndPoint.html
  name: IEndPoint
  nameWithType: IEndPoint
  fullName: Netick.IEndPoint
- uid: Netick.INetickSocket.CreateFromIpPort*
  commentId: Overload:Netick.INetickSocket.CreateFromIpPort
  isExternal: true
  href: Netick.INetickSocket.html#Netick_INetickSocket_CreateFromIpPort_System_String_System_Int32_
  name: CreateFromIpPort
  nameWithType: INetickSocket.CreateFromIpPort
  fullName: Netick.INetickSocket.CreateFromIpPort
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Netick.INetickSocket.Poll*
  commentId: Overload:Netick.INetickSocket.Poll
  isExternal: true
  href: Netick.INetickSocket.html#Netick_INetickSocket_Poll
  name: Poll
  nameWithType: INetickSocket.Poll
  fullName: Netick.INetickSocket.Poll
- uid: Netick.INetickSocket.Receive*
  commentId: Overload:Netick.INetickSocket.Receive
  isExternal: true
  href: Netick.INetickSocket.html#Netick_INetickSocket_Receive_Netick_IEndPoint__System_Byte__System_Int32_
  name: Receive
  nameWithType: INetickSocket.Receive
  fullName: Netick.INetickSocket.Receive
- uid: System.Byte*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte*
  nameWithType: byte*
  fullName: byte*
  nameWithType.vb: Byte*
  fullName.vb: Byte*
  name.vb: Byte*
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
- uid: Netick.INetickSocket.Send*
  commentId: Overload:Netick.INetickSocket.Send
  isExternal: true
  href: Netick.INetickSocket.html#Netick_INetickSocket_Send_Netick_IEndPoint_System_Byte__System_Int32_
  name: Send
  nameWithType: INetickSocket.Send
  fullName: Netick.INetickSocket.Send
