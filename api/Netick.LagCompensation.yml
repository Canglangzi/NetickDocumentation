### YamlMime:ManagedReference
items:
- uid: Netick.LagCompensation
  commentId: T:Netick.LagCompensation
  id: LagCompensation
  parent: Netick
  children:
  - Netick.LagCompensation.#ctor
  - Netick.LagCompensation.CanRewind(Netick.ServerConnection)
  - Netick.LagCompensation.Compensate
  - Netick.LagCompensation.FetchHitShapePosAndRot(Netick.LagCompShape,Netick.NetworkPlayer,System.Numerics.Vector3@,System.Numerics.Quaternion@)
  - Netick.LagCompensation.OverlapSphere(System.Numerics.Vector3,System.Single,System.Collections.Generic.List{Netick.NetHit},Netick.NetworkPlayer,System.Int32,System.Boolean,System.Boolean)
  - Netick.LagCompensation.Raycast(System.Numerics.Vector3,System.Numerics.Vector3,Netick.NetHit@,Netick.NetworkPlayer,System.Single,System.Int32,System.Boolean)
  langs:
  - csharp
  - vb
  name: LagCompensation
  nameWithType: LagCompensation
  fullName: Netick.LagCompensation
  type: Class
  assemblies:
  - Netick.Pro
  namespace: Netick
  syntax:
    content: 'public sealed class LagCompensation : INetickComponent'
    content.vb: Public NotInheritable Class LagCompensation Implements INetickComponent
  inheritance:
  - System.Object
  implements:
  - Netick.INetickComponent
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Netick.LagCompensation.Compensate
  commentId: F:Netick.LagCompensation.Compensate
  id: Compensate
  parent: Netick.LagCompensation
  langs:
  - csharp
  - vb
  name: Compensate
  nameWithType: LagCompensation.Compensate
  fullName: Netick.LagCompensation.Compensate
  type: Field
  assemblies:
  - Netick.Pro
  namespace: Netick
  syntax:
    content: public bool Compensate
    return:
      type: System.Boolean
    content.vb: Public Compensate As Boolean
- uid: Netick.LagCompensation.#ctor
  commentId: M:Netick.LagCompensation.#ctor
  id: '#ctor'
  parent: Netick.LagCompensation
  langs:
  - csharp
  - vb
  name: LagCompensation()
  nameWithType: LagCompensation.LagCompensation()
  fullName: Netick.LagCompensation.LagCompensation()
  type: Constructor
  assemblies:
  - Netick.Pro
  namespace: Netick
  syntax:
    content: public LagCompensation()
    content.vb: Public Sub New()
  overload: Netick.LagCompensation.#ctor*
  nameWithType.vb: LagCompensation.New()
  fullName.vb: Netick.LagCompensation.New()
  name.vb: New()
- uid: Netick.LagCompensation.FetchHitShapePosAndRot(Netick.LagCompShape,Netick.NetworkPlayer,System.Numerics.Vector3@,System.Numerics.Quaternion@)
  commentId: M:Netick.LagCompensation.FetchHitShapePosAndRot(Netick.LagCompShape,Netick.NetworkPlayer,System.Numerics.Vector3@,System.Numerics.Quaternion@)
  id: FetchHitShapePosAndRot(Netick.LagCompShape,Netick.NetworkPlayer,System.Numerics.Vector3@,System.Numerics.Quaternion@)
  parent: Netick.LagCompensation
  langs:
  - csharp
  - vb
  name: FetchHitShapePosAndRot(LagCompShape, NetworkPlayer, out Vector3, out Quaternion)
  nameWithType: LagCompensation.FetchHitShapePosAndRot(LagCompShape, NetworkPlayer, out Vector3, out Quaternion)
  fullName: Netick.LagCompensation.FetchHitShapePosAndRot(Netick.LagCompShape, Netick.NetworkPlayer, out System.Numerics.Vector3, out System.Numerics.Quaternion)
  type: Method
  assemblies:
  - Netick.Pro
  namespace: Netick
  syntax:
    content: public void FetchHitShapePosAndRot(LagCompShape hitShape, NetworkPlayer inputSource, out Vector3 pos, out Quaternion rot)
    parameters:
    - id: hitShape
      type: Netick.LagCompShape
    - id: inputSource
      type: Netick.NetworkPlayer
    - id: pos
      type: System.Numerics.Vector3
    - id: rot
      type: System.Numerics.Quaternion
    content.vb: Public Sub FetchHitShapePosAndRot(hitShape As LagCompShape, inputSource As NetworkPlayer, pos As Vector3, rot As Quaternion)
  overload: Netick.LagCompensation.FetchHitShapePosAndRot*
  nameWithType.vb: LagCompensation.FetchHitShapePosAndRot(LagCompShape, NetworkPlayer, Vector3, Quaternion)
  fullName.vb: Netick.LagCompensation.FetchHitShapePosAndRot(Netick.LagCompShape, Netick.NetworkPlayer, System.Numerics.Vector3, System.Numerics.Quaternion)
  name.vb: FetchHitShapePosAndRot(LagCompShape, NetworkPlayer, Vector3, Quaternion)
- uid: Netick.LagCompensation.Raycast(System.Numerics.Vector3,System.Numerics.Vector3,Netick.NetHit@,Netick.NetworkPlayer,System.Single,System.Int32,System.Boolean)
  commentId: M:Netick.LagCompensation.Raycast(System.Numerics.Vector3,System.Numerics.Vector3,Netick.NetHit@,Netick.NetworkPlayer,System.Single,System.Int32,System.Boolean)
  id: Raycast(System.Numerics.Vector3,System.Numerics.Vector3,Netick.NetHit@,Netick.NetworkPlayer,System.Single,System.Int32,System.Boolean)
  parent: Netick.LagCompensation
  langs:
  - csharp
  - vb
  name: Raycast(Vector3, Vector3, out NetHit, NetworkPlayer, float, int, bool)
  nameWithType: LagCompensation.Raycast(Vector3, Vector3, out NetHit, NetworkPlayer, float, int, bool)
  fullName: Netick.LagCompensation.Raycast(System.Numerics.Vector3, System.Numerics.Vector3, out Netick.NetHit, Netick.NetworkPlayer, float, int, bool)
  type: Method
  assemblies:
  - Netick.Pro
  namespace: Netick
  summary: >-
    Casts a lag compensated ray, from point origin, in direction direction, of length maxDistance,

    against all HitShapes and Colliders (if includeUnityColliders is equal to true) in the Scene.
  example: []
  syntax:
    content: public bool Raycast(Vector3 origin, Vector3 direction, out NetHit hitData, NetworkPlayer inputSource, float maxDistance = Infinity, int layerMask = -1, bool includeInputSource = false)
    parameters:
    - id: origin
      type: System.Numerics.Vector3
      description: The starting point of the ray in world coordinates.
    - id: direction
      type: System.Numerics.Vector3
      description: The direction of the ray.
    - id: hitData
      type: Netick.NetHit
      description: ''
    - id: inputSource
      type: Netick.NetworkPlayer
      description: The input source to compensate for.
    - id: maxDistance
      type: System.Single
      description: The max distance the ray should check for collisions.
    - id: layerMask
      type: System.Int32
      description: A that is used to selectively ignore Colliders when casting a ray.
    - id: includeInputSource
      type: System.Boolean
    return:
      type: System.Boolean
      description: Returns true if the ray intersects with a Collider/HitShape, otherwise false.
    content.vb: Public Function Raycast(origin As Vector3, direction As Vector3, hitData As NetHit, inputSource As NetworkPlayer, maxDistance As Single = Infinity, layerMask As Integer = -1, includeInputSource As Boolean = False) As Boolean
  overload: Netick.LagCompensation.Raycast*
  nameWithType.vb: LagCompensation.Raycast(Vector3, Vector3, NetHit, NetworkPlayer, Single, Integer, Boolean)
  fullName.vb: Netick.LagCompensation.Raycast(System.Numerics.Vector3, System.Numerics.Vector3, Netick.NetHit, Netick.NetworkPlayer, Single, Integer, Boolean)
  name.vb: Raycast(Vector3, Vector3, NetHit, NetworkPlayer, Single, Integer, Boolean)
- uid: Netick.LagCompensation.CanRewind(Netick.ServerConnection)
  commentId: M:Netick.LagCompensation.CanRewind(Netick.ServerConnection)
  id: CanRewind(Netick.ServerConnection)
  parent: Netick.LagCompensation
  langs:
  - csharp
  - vb
  name: CanRewind(ServerConnection)
  nameWithType: LagCompensation.CanRewind(ServerConnection)
  fullName: Netick.LagCompensation.CanRewind(Netick.ServerConnection)
  type: Method
  assemblies:
  - Netick.Pro
  namespace: Netick
  syntax:
    content: public static bool CanRewind(ServerConnection inputSource)
    parameters:
    - id: inputSource
      type: Netick.ServerConnection
    return:
      type: System.Boolean
    content.vb: Public Shared Function CanRewind(inputSource As ServerConnection) As Boolean
  overload: Netick.LagCompensation.CanRewind*
- uid: Netick.LagCompensation.OverlapSphere(System.Numerics.Vector3,System.Single,System.Collections.Generic.List{Netick.NetHit},Netick.NetworkPlayer,System.Int32,System.Boolean,System.Boolean)
  commentId: M:Netick.LagCompensation.OverlapSphere(System.Numerics.Vector3,System.Single,System.Collections.Generic.List{Netick.NetHit},Netick.NetworkPlayer,System.Int32,System.Boolean,System.Boolean)
  id: OverlapSphere(System.Numerics.Vector3,System.Single,System.Collections.Generic.List{Netick.NetHit},Netick.NetworkPlayer,System.Int32,System.Boolean,System.Boolean)
  parent: Netick.LagCompensation
  langs:
  - csharp
  - vb
  name: OverlapSphere(Vector3, float, List<NetHit>, NetworkPlayer, int, bool, bool)
  nameWithType: LagCompensation.OverlapSphere(Vector3, float, List<NetHit>, NetworkPlayer, int, bool, bool)
  fullName: Netick.LagCompensation.OverlapSphere(System.Numerics.Vector3, float, System.Collections.Generic.List<Netick.NetHit>, Netick.NetworkPlayer, int, bool, bool)
  type: Method
  assemblies:
  - Netick.Pro
  namespace: Netick
  summary: Performs a lag compensated OverlapSphere which computes and stores HitShapes and Colliders (if includeUnityColliders is equal to true) touching or inside the sphere.
  example: []
  syntax:
    content: public void OverlapSphere(Vector3 center, float radius, List<NetHit> hits, NetworkPlayer inputSource, int layerMask = -1, bool includeInputSource = false, bool oneHitPerHitShapeContainer = false)
    parameters:
    - id: center
      type: System.Numerics.Vector3
      description: Center of the sphere.
    - id: radius
      type: System.Single
      description: Radius of the sphere.
    - id: hits
      type: System.Collections.Generic.List{Netick.NetHit}
      description: ''
    - id: inputSource
      type: Netick.NetworkPlayer
      description: The input source to compensate for.
    - id: layerMask
      type: System.Int32
      description: A defines which layers of colliders to include in the query.
    - id: includeInputSource
      type: System.Boolean
    - id: oneHitPerHitShapeContainer
      type: System.Boolean
      description: Choose whether you want to include only one HitShape per HitShapeContainer
    content.vb: Public Sub OverlapSphere(center As Vector3, radius As Single, hits As List(Of NetHit), inputSource As NetworkPlayer, layerMask As Integer = -1, includeInputSource As Boolean = False, oneHitPerHitShapeContainer As Boolean = False)
  overload: Netick.LagCompensation.OverlapSphere*
  nameWithType.vb: LagCompensation.OverlapSphere(Vector3, Single, List(Of NetHit), NetworkPlayer, Integer, Boolean, Boolean)
  fullName.vb: Netick.LagCompensation.OverlapSphere(System.Numerics.Vector3, Single, System.Collections.Generic.List(Of Netick.NetHit), Netick.NetworkPlayer, Integer, Boolean, Boolean)
  name.vb: OverlapSphere(Vector3, Single, List(Of NetHit), NetworkPlayer, Integer, Boolean, Boolean)
references:
- uid: Netick
  commentId: N:Netick
  isExternal: true
  href: Netick.html
  name: Netick
  nameWithType: Netick
  fullName: Netick
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Netick.INetickComponent
  commentId: T:Netick.INetickComponent
  parent: Netick
  isExternal: true
  href: Netick.INetickComponent.html
  name: INetickComponent
  nameWithType: INetickComponent
  fullName: Netick.INetickComponent
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Netick.LagCompensation.#ctor*
  commentId: Overload:Netick.LagCompensation.#ctor
  isExternal: true
  href: Netick.LagCompensation.html#Netick_LagCompensation__ctor
  name: LagCompensation
  nameWithType: LagCompensation.LagCompensation
  fullName: Netick.LagCompensation.LagCompensation
  nameWithType.vb: LagCompensation.New
  fullName.vb: Netick.LagCompensation.New
  name.vb: New
- uid: Netick.LagCompensation.FetchHitShapePosAndRot*
  commentId: Overload:Netick.LagCompensation.FetchHitShapePosAndRot
  isExternal: true
  href: Netick.LagCompensation.html#Netick_LagCompensation_FetchHitShapePosAndRot_Netick_LagCompShape_Netick_NetworkPlayer_System_Numerics_Vector3__System_Numerics_Quaternion__
  name: FetchHitShapePosAndRot
  nameWithType: LagCompensation.FetchHitShapePosAndRot
  fullName: Netick.LagCompensation.FetchHitShapePosAndRot
- uid: Netick.LagCompShape
  commentId: T:Netick.LagCompShape
  parent: Netick
  isExternal: true
  href: Netick.LagCompShape.html
  name: LagCompShape
  nameWithType: LagCompShape
  fullName: Netick.LagCompShape
- uid: Netick.NetworkPlayer
  commentId: T:Netick.NetworkPlayer
  parent: Netick
  isExternal: true
  href: Netick.NetworkPlayer.html
  name: NetworkPlayer
  nameWithType: NetworkPlayer
  fullName: Netick.NetworkPlayer
- uid: System.Numerics.Vector3
  commentId: T:System.Numerics.Vector3
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Numerics.Quaternion
  commentId: T:System.Numerics.Quaternion
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.quaternion
  name: Quaternion
  nameWithType: Quaternion
  fullName: System.Numerics.Quaternion
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: Netick.LagCompensation.Raycast*
  commentId: Overload:Netick.LagCompensation.Raycast
  isExternal: true
  href: Netick.LagCompensation.html#Netick_LagCompensation_Raycast_System_Numerics_Vector3_System_Numerics_Vector3_Netick_NetHit__Netick_NetworkPlayer_System_Single_System_Int32_System_Boolean_
  name: Raycast
  nameWithType: LagCompensation.Raycast
  fullName: Netick.LagCompensation.Raycast
- uid: Netick.NetHit
  commentId: T:Netick.NetHit
  parent: Netick
  isExternal: true
  href: Netick.NetHit.html
  name: NetHit
  nameWithType: NetHit
  fullName: Netick.NetHit
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Netick.LagCompensation.CanRewind*
  commentId: Overload:Netick.LagCompensation.CanRewind
  isExternal: true
  href: Netick.LagCompensation.html#Netick_LagCompensation_CanRewind_Netick_ServerConnection_
  name: CanRewind
  nameWithType: LagCompensation.CanRewind
  fullName: Netick.LagCompensation.CanRewind
- uid: Netick.ServerConnection
  commentId: T:Netick.ServerConnection
  parent: Netick
  isExternal: true
  href: Netick.ServerConnection.html
  name: ServerConnection
  nameWithType: ServerConnection
  fullName: Netick.ServerConnection
- uid: Netick.LagCompensation.OverlapSphere*
  commentId: Overload:Netick.LagCompensation.OverlapSphere
  isExternal: true
  href: Netick.LagCompensation.html#Netick_LagCompensation_OverlapSphere_System_Numerics_Vector3_System_Single_System_Collections_Generic_List_Netick_NetHit__Netick_NetworkPlayer_System_Int32_System_Boolean_System_Boolean_
  name: OverlapSphere
  nameWithType: LagCompensation.OverlapSphere
  fullName: Netick.LagCompensation.OverlapSphere
- uid: System.Collections.Generic.List{Netick.NetHit}
  commentId: T:System.Collections.Generic.List{Netick.NetHit}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<NetHit>
  nameWithType: List<NetHit>
  fullName: System.Collections.Generic.List<Netick.NetHit>
  nameWithType.vb: List(Of NetHit)
  fullName.vb: System.Collections.Generic.List(Of Netick.NetHit)
  name.vb: List(Of NetHit)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Netick.NetHit
    name: NetHit
    isExternal: true
    href: Netick.NetHit.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Netick.NetHit
    name: NetHit
    isExternal: true
    href: Netick.NetHit.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
